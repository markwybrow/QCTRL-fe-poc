{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst side_effect_1 = __importDefault(require(\"./side-effect\"));\n\nconst amp_context_1 = require(\"./amp-context\");\n\nconst head_manager_context_1 = require(\"./head-manager-context\");\n\nconst amp_1 = require(\"./amp\");\n\nfunction defaultHead(inAmpMode = false) {\n  const head = [react_1.default.createElement(\"meta\", {\n    key: \"charSet\",\n    charSet: \"utf-8\"\n  })];\n\n  if (!inAmpMode) {\n    head.push(react_1.default.createElement(\"meta\", {\n      key: \"viewport\",\n      name: \"viewport\",\n      content: \"width=device-width,minimum-scale=1,initial-scale=1\"\n    }));\n  }\n\n  return head;\n}\n\nexports.defaultHead = defaultHead;\n\nfunction onlyReactElement(list, child) {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list;\n  } // Adds support for React.Fragment\n\n\n  if (child.type === react_1.default.Fragment) {\n    return list.concat(react_1.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild) => {\n      if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {\n        return fragmentList;\n      }\n\n      return fragmentList.concat(fragmentChild);\n    }, []));\n  }\n\n  return list.concat(child);\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\n\nfunction unique() {\n  const keys = new Set();\n  const tags = new Set();\n  const metaTypes = new Set();\n  const metaCategories = {};\n  return h => {\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('.$') === 0) {\n      if (keys.has(h.key)) return false;\n      keys.add(h.key);\n      return true;\n    } // If custom meta tag has been added the key will be prepended with `.$`, we can\n    // check for this and dedupe in favor of the custom one, so the default\n    // is not rendered as well\n\n\n    if (keys.has(`.$${h.key}`)) return false; // eslint-disable-next-line default-case\n\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) return false;\n        tags.add(h.type);\n        break;\n\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i];\n          if (!h.props.hasOwnProperty(metatype)) continue;\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) return false;\n            metaTypes.add(metatype);\n          } else {\n            const category = h.props[metatype];\n            const categories = metaCategories[metatype] || new Set();\n            if (categories.has(category)) return false;\n            categories.add(category);\n            metaCategories[metatype] = categories;\n          }\n        }\n\n        break;\n    }\n\n    return true;\n  };\n}\n/**\n *\n * @param headElement List of multiple <Head> instances\n */\n\n\nfunction reduceComponents(headElements, props) {\n  return headElements.reduce((list, headElement) => {\n    const headElementChildren = react_1.default.Children.toArray(headElement.props.children);\n    return list.concat(headElementChildren);\n  }, []).reduce(onlyReactElement, []).reverse().concat(defaultHead(props.inAmpMode)).filter(unique()).reverse().map((c, i) => {\n    const key = c.key || i;\n    return react_1.default.cloneElement(c, {\n      key\n    });\n  });\n}\n\nconst Effect = side_effect_1.default();\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\n\nfunction Head({\n  children\n}) {\n  return react_1.default.createElement(amp_context_1.AmpStateContext.Consumer, null, ampState => react_1.default.createElement(head_manager_context_1.HeadManagerContext.Consumer, null, updateHead => react_1.default.createElement(Effect, {\n    reduceComponentsToState: reduceComponents,\n    handleStateChange: updateHead,\n    inAmpMode: amp_1.isInAmpMode(ampState)\n  }, children)));\n}\n\nHead.rewind = Effect.rewind;\nexports.default = Head;","map":{"version":3,"sources":["/Users/markwybrow/DEV/Next-App/QCTRL/node_modules/next/dist/next-server/lib/head.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","side_effect_1","amp_context_1","head_manager_context_1","amp_1","defaultHead","inAmpMode","head","default","createElement","key","charSet","push","name","content","onlyReactElement","list","child","type","Fragment","concat","Children","toArray","props","children","reduce","fragmentList","fragmentChild","METATYPES","unique","keys","Set","tags","metaTypes","metaCategories","h","indexOf","has","add","i","len","length","metatype","hasOwnProperty","category","categories","reduceComponents","headElements","headElement","headElementChildren","reverse","filter","map","c","cloneElement","Effect","Head","AmpStateContext","Consumer","ampState","HeadManagerContext","updateHead","reduceComponentsToState","handleStateChange","isInAmpMode","rewind"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,UAAQ,SAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGP,eAAe,CAACQ,OAAO,CAAC,OAAD,CAAR,CAA/B;;AACA,MAAMC,aAAa,GAAGT,eAAe,CAACQ,OAAO,CAAC,eAAD,CAAR,CAArC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMG,sBAAsB,GAAGH,OAAO,CAAC,wBAAD,CAAtC;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAD,CAArB;;AACA,SAASK,WAAT,CAAqBC,SAAS,GAAG,KAAjC,EAAwC;AACpC,QAAMC,IAAI,GAAG,CAACR,OAAO,CAACS,OAAR,CAAgBC,aAAhB,CAA8B,MAA9B,EAAsC;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,OAAO,EAAE;AAA3B,GAAtC,CAAD,CAAb;;AACA,MAAI,CAACL,SAAL,EAAgB;AACZC,IAAAA,IAAI,CAACK,IAAL,CAAUb,OAAO,CAACS,OAAR,CAAgBC,aAAhB,CAA8B,MAA9B,EAAsC;AAAEC,MAAAA,GAAG,EAAE,UAAP;AAAmBG,MAAAA,IAAI,EAAE,UAAzB;AAAqCC,MAAAA,OAAO,EAAE;AAA9C,KAAtC,CAAV;AACH;;AACD,SAAOP,IAAP;AACH;;AACDV,OAAO,CAACQ,WAAR,GAAsBA,WAAtB;;AACA,SAASU,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACnC;AACA,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;AACxD,WAAOD,IAAP;AACH,GAJkC,CAKnC;;;AACA,MAAIC,KAAK,CAACC,IAAN,KAAenB,OAAO,CAACS,OAAR,CAAgBW,QAAnC,EAA6C;AACzC,WAAOH,IAAI,CAACI,MAAL,CAAYrB,OAAO,CAACS,OAAR,CAAgBa,QAAhB,CAAyBC,OAAzB,CAAiCL,KAAK,CAACM,KAAN,CAAYC,QAA7C,EAAuDC,MAAvD,CAA8D,CAACC,YAAD,EAAeC,aAAf,KAAiC;AAC9G,UAAI,OAAOA,aAAP,KAAyB,QAAzB,IACA,OAAOA,aAAP,KAAyB,QAD7B,EACuC;AACnC,eAAOD,YAAP;AACH;;AACD,aAAOA,YAAY,CAACN,MAAb,CAAoBO,aAApB,CAAP;AACH,KANkB,EAMhB,EANgB,CAAZ,CAAP;AAOH;;AACD,SAAOX,IAAI,CAACI,MAAL,CAAYH,KAAZ,CAAP;AACH;;AACD,MAAMW,SAAS,GAAG,CAAC,MAAD,EAAS,WAAT,EAAsB,SAAtB,EAAiC,UAAjC,CAAlB;AACA;;;;;;AAKA,SAASC,MAAT,GAAkB;AACd,QAAMC,IAAI,GAAG,IAAIC,GAAJ,EAAb;AACA,QAAMC,IAAI,GAAG,IAAID,GAAJ,EAAb;AACA,QAAME,SAAS,GAAG,IAAIF,GAAJ,EAAlB;AACA,QAAMG,cAAc,GAAG,EAAvB;AACA,SAAQC,CAAD,IAAO;AACV,QAAIA,CAAC,CAACzB,GAAF,IAAS,OAAOyB,CAAC,CAACzB,GAAT,KAAiB,QAA1B,IAAsCyB,CAAC,CAACzB,GAAF,CAAM0B,OAAN,CAAc,IAAd,MAAwB,CAAlE,EAAqE;AACjE,UAAIN,IAAI,CAACO,GAAL,CAASF,CAAC,CAACzB,GAAX,CAAJ,EACI,OAAO,KAAP;AACJoB,MAAAA,IAAI,CAACQ,GAAL,CAASH,CAAC,CAACzB,GAAX;AACA,aAAO,IAAP;AACH,KANS,CAOV;AACA;AACA;;;AACA,QAAIoB,IAAI,CAACO,GAAL,CAAU,KAAIF,CAAC,CAACzB,GAAI,EAApB,CAAJ,EACI,OAAO,KAAP,CAXM,CAYV;;AACA,YAAQyB,CAAC,CAACjB,IAAV;AACI,WAAK,OAAL;AACA,WAAK,MAAL;AACI,YAAIc,IAAI,CAACK,GAAL,CAASF,CAAC,CAACjB,IAAX,CAAJ,EACI,OAAO,KAAP;AACJc,QAAAA,IAAI,CAACM,GAAL,CAASH,CAAC,CAACjB,IAAX;AACA;;AACJ,WAAK,MAAL;AACI,aAAK,IAAIqB,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGZ,SAAS,CAACa,MAAhC,EAAwCF,CAAC,GAAGC,GAA5C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,gBAAMG,QAAQ,GAAGd,SAAS,CAACW,CAAD,CAA1B;AACA,cAAI,CAACJ,CAAC,CAACZ,KAAF,CAAQoB,cAAR,CAAuBD,QAAvB,CAAL,EACI;;AACJ,cAAIA,QAAQ,KAAK,SAAjB,EAA4B;AACxB,gBAAIT,SAAS,CAACI,GAAV,CAAcK,QAAd,CAAJ,EACI,OAAO,KAAP;AACJT,YAAAA,SAAS,CAACK,GAAV,CAAcI,QAAd;AACH,WAJD,MAKK;AACD,kBAAME,QAAQ,GAAGT,CAAC,CAACZ,KAAF,CAAQmB,QAAR,CAAjB;AACA,kBAAMG,UAAU,GAAGX,cAAc,CAACQ,QAAD,CAAd,IAA4B,IAAIX,GAAJ,EAA/C;AACA,gBAAIc,UAAU,CAACR,GAAX,CAAeO,QAAf,CAAJ,EACI,OAAO,KAAP;AACJC,YAAAA,UAAU,CAACP,GAAX,CAAeM,QAAf;AACAV,YAAAA,cAAc,CAACQ,QAAD,CAAd,GAA2BG,UAA3B;AACH;AACJ;;AACD;AA1BR;;AA4BA,WAAO,IAAP;AACH,GA1CD;AA2CH;AACD;;;;;;AAIA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwCxB,KAAxC,EAA+C;AAC3C,SAAOwB,YAAY,CACdtB,MADE,CACK,CAACT,IAAD,EAAOgC,WAAP,KAAuB;AAC/B,UAAMC,mBAAmB,GAAGlD,OAAO,CAACS,OAAR,CAAgBa,QAAhB,CAAyBC,OAAzB,CAAiC0B,WAAW,CAACzB,KAAZ,CAAkBC,QAAnD,CAA5B;AACA,WAAOR,IAAI,CAACI,MAAL,CAAY6B,mBAAZ,CAAP;AACH,GAJM,EAIJ,EAJI,EAKFxB,MALE,CAKKV,gBALL,EAKuB,EALvB,EAMFmC,OANE,GAOF9B,MAPE,CAOKf,WAAW,CAACkB,KAAK,CAACjB,SAAP,CAPhB,EAQF6C,MARE,CAQKtB,MAAM,EARX,EASFqB,OATE,GAUFE,GAVE,CAUE,CAACC,CAAD,EAAId,CAAJ,KAAU;AACf,UAAM7B,GAAG,GAAG2C,CAAC,CAAC3C,GAAF,IAAS6B,CAArB;AACA,WAAOxC,OAAO,CAACS,OAAR,CAAgB8C,YAAhB,CAA6BD,CAA7B,EAAgC;AAAE3C,MAAAA;AAAF,KAAhC,CAAP;AACH,GAbM,CAAP;AAcH;;AACD,MAAM6C,MAAM,GAAGtD,aAAa,CAACO,OAAd,EAAf;AACA;;;;;AAIA,SAASgD,IAAT,CAAc;AAAEhC,EAAAA;AAAF,CAAd,EAA4B;AACxB,SAAQzB,OAAO,CAACS,OAAR,CAAgBC,aAAhB,CAA8BP,aAAa,CAACuD,eAAd,CAA8BC,QAA5D,EAAsE,IAAtE,EAA4EC,QAAQ,IAAK5D,OAAO,CAACS,OAAR,CAAgBC,aAAhB,CAA8BN,sBAAsB,CAACyD,kBAAvB,CAA0CF,QAAxE,EAAkF,IAAlF,EAAwFG,UAAU,IAAK9D,OAAO,CAACS,OAAR,CAAgBC,aAAhB,CAA8B8C,MAA9B,EAAsC;AAAEO,IAAAA,uBAAuB,EAAEhB,gBAA3B;AAA6CiB,IAAAA,iBAAiB,EAAEF,UAAhE;AAA4EvD,IAAAA,SAAS,EAAEF,KAAK,CAAC4D,WAAN,CAAkBL,QAAlB;AAAvF,GAAtC,EAA4JnC,QAA5J,CAAvG,CAAzF,CAAR;AACH;;AACDgC,IAAI,CAACS,MAAL,GAAcV,MAAM,CAACU,MAArB;AACApE,OAAO,CAACW,OAAR,GAAkBgD,IAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst side_effect_1 = __importDefault(require(\"./side-effect\"));\nconst amp_context_1 = require(\"./amp-context\");\nconst head_manager_context_1 = require(\"./head-manager-context\");\nconst amp_1 = require(\"./amp\");\nfunction defaultHead(inAmpMode = false) {\n    const head = [react_1.default.createElement(\"meta\", { key: \"charSet\", charSet: \"utf-8\" })];\n    if (!inAmpMode) {\n        head.push(react_1.default.createElement(\"meta\", { key: \"viewport\", name: \"viewport\", content: \"width=device-width,minimum-scale=1,initial-scale=1\" }));\n    }\n    return head;\n}\nexports.defaultHead = defaultHead;\nfunction onlyReactElement(list, child) {\n    // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n    if (typeof child === 'string' || typeof child === 'number') {\n        return list;\n    }\n    // Adds support for React.Fragment\n    if (child.type === react_1.default.Fragment) {\n        return list.concat(react_1.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild) => {\n            if (typeof fragmentChild === 'string' ||\n                typeof fragmentChild === 'number') {\n                return fragmentList;\n            }\n            return fragmentList.concat(fragmentChild);\n        }, []));\n    }\n    return list.concat(child);\n}\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n    const keys = new Set();\n    const tags = new Set();\n    const metaTypes = new Set();\n    const metaCategories = {};\n    return (h) => {\n        if (h.key && typeof h.key !== 'number' && h.key.indexOf('.$') === 0) {\n            if (keys.has(h.key))\n                return false;\n            keys.add(h.key);\n            return true;\n        }\n        // If custom meta tag has been added the key will be prepended with `.$`, we can\n        // check for this and dedupe in favor of the custom one, so the default\n        // is not rendered as well\n        if (keys.has(`.$${h.key}`))\n            return false;\n        // eslint-disable-next-line default-case\n        switch (h.type) {\n            case 'title':\n            case 'base':\n                if (tags.has(h.type))\n                    return false;\n                tags.add(h.type);\n                break;\n            case 'meta':\n                for (let i = 0, len = METATYPES.length; i < len; i++) {\n                    const metatype = METATYPES[i];\n                    if (!h.props.hasOwnProperty(metatype))\n                        continue;\n                    if (metatype === 'charSet') {\n                        if (metaTypes.has(metatype))\n                            return false;\n                        metaTypes.add(metatype);\n                    }\n                    else {\n                        const category = h.props[metatype];\n                        const categories = metaCategories[metatype] || new Set();\n                        if (categories.has(category))\n                            return false;\n                        categories.add(category);\n                        metaCategories[metatype] = categories;\n                    }\n                }\n                break;\n        }\n        return true;\n    };\n}\n/**\n *\n * @param headElement List of multiple <Head> instances\n */\nfunction reduceComponents(headElements, props) {\n    return headElements\n        .reduce((list, headElement) => {\n        const headElementChildren = react_1.default.Children.toArray(headElement.props.children);\n        return list.concat(headElementChildren);\n    }, [])\n        .reduce(onlyReactElement, [])\n        .reverse()\n        .concat(defaultHead(props.inAmpMode))\n        .filter(unique())\n        .reverse()\n        .map((c, i) => {\n        const key = c.key || i;\n        return react_1.default.cloneElement(c, { key });\n    });\n}\nconst Effect = side_effect_1.default();\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }) {\n    return (react_1.default.createElement(amp_context_1.AmpStateContext.Consumer, null, ampState => (react_1.default.createElement(head_manager_context_1.HeadManagerContext.Consumer, null, updateHead => (react_1.default.createElement(Effect, { reduceComponentsToState: reduceComponents, handleStateChange: updateHead, inAmpMode: amp_1.isInAmpMode(ampState) }, children))))));\n}\nHead.rewind = Effect.rewind;\nexports.default = Head;\n"]},"metadata":{},"sourceType":"script"}